<?xml version="1.0" encoding="UTF-8"?>
<!-- SubjectMapper.xml -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="talkie.dao.TalkieUserDao">
  <resultMap type="talkie.vo.TalkieUserVo" id="talkieUserMap">
    <id column="UNO" property="no"/><!-- PK 컬럼에 대해서만 설정한다. -->
    <result column="EMAIL" property="email"/>
    <result column="PASSWORD" property="password"/>
    <result column="NAME" property="name"/>
    <result column="AGENO" property="age"/>
    <result column="NATINO" property="nation"/>
    <result column="LANNO" property="languageNo"/>
    <result column="GENDER" property="gender"/>
    <result column="ISDECLARE" property="isDeclare"/>
    <result column="GRADE" property="grade"/>
    <result column="ISEMAIL" property="isEmail"/>
    <result column="FAVTAG" property="favTag"/>
    <result column="PHOPATH" property="phoPath"/>
    <result column="PROFILETITLE" property="profileTitle"/>
    <result column="PROFILEDESC" property="profileDesc"/>
    <result column="RECOMMEND" property="recommend"/>
  <!--     <association property="SE_ADDLANG" column="UNO" javaType="UserInfoVo">
       <id column="UNO" property="no"/>PK 컬럼에 대해서만 설정한다.
    <result column="EMAIL" property="email"/>
    <result column="NAME" property="name"/>
    <result column="NATINO" property="nation"/>
    <result column="LANNO" property="languageNo"/>
    <result column="PHOPATH" property="photoPath"/>
      </association> -->
      
      
  </resultMap> 

  <!-- 
  <insert id="insert" parameterType="studentVo">
    insert into SE_STUDS (UNO,COMP,POS,STAT,LAST_SCH,ACCT)
    values (#{no}, 
            #{company}, 
            #{position}, 
            #{workingState}, 
            #{lastSchool}, 
            #{bankingAccount})
  </insert>
   -->
 
  <select id="getLoginUser" 
      parameterType="map" resultMap="talkieUserMap">
    select UNO,NAME,EMAIL,AGENO,NATINO,LANNO,GENDER,FAVTAG,PHOPATH
    from SE_USERS
    where EMAIL=#{email} and PASSWORD=#{password}
  </select>
  
  <select id="getProfileInfo" 
      parameterType="String" resultMap="talkieUserMap">
    select NAME, FAVTAG, PHOPATH, PROFILETITLE, PROFILEDESC, RECOMMEND
    from SE_USERS
    where EMAIL=#{email}
  </select>
  
    
  <select id="getfriendProfileInfo" 
      parameterType="String" resultMap="talkieUserMap">
    select NAME, FAVTAG, PHOPATH, PROFILETITLE, PROFILEDESC, RECOMMEND
    from SE_USERS
    where EMAIL=#{email}
  </select>
  
  <!--
    UPDATE [테이블] SET [열] = '변경할값' WHERE [조건] 
  -->
  <update id="updateProfilePhoto" 
      parameterType="hashmap">
    update SE_USERS set PHOPATH=#{filename} where UNO=#{userNo}
  </update>
  
  
    <update id="update" parameterType="TalkieUserVo" >
      update SE_USERS set
      PROFILETITLE=#{profileTitle},
      PROFILEDESC=#{profileDesc},
      FAVTAG=#{favTag}
    where UNO=#{no}
  </update>
  
      <select id="getFriendFind" 
      parameterType="TalkieUserVo" resultMap="talkieUserMap">
    
    select UNO,NAME,EMAIL,AGENO,NATINO,LANNO,GENDER,FAVTAG,PHOPATH,PROFILETITLE,PROFILEDESC,RECOMMEND
    from SE_USERS 
    where NAME like CONCAT('%', #{search}, '%') or EMAIL like CONCAT('%', #{search}, '%') or NATINO like CONCAT('%', #{search}, '%')

  </select>
  
        

  <update id="updateloveFr" parameterType="TalkieUserVo">
     update SE_USERS set
      RECOMMEND=#{recommend}
      where UNO=#{no}
  </update>
  
     <select id="getfriendNo" 
      parameterType="TalkieUserVo" resultMap="talkieUserMap">
      select UNO,NAME,EMAIL,AGENO,NATINO,LANNO,GENDER,PHOPATH,RECOMMEND
      from SE_USERS 
      where UNO=#{no}
  
    </select>
    
      <select id="getfriendinfo" 
      parameterType="TalkieUserVo" resultMap="talkieUserMap">
      select UNO,NAME,EMAIL,AGENO,NATINO,LANNO,GENDER,FAVTAG,PHOPATH,PROFILETITLE,PROFILEDESC,RECOMMEND
      from SE_USERS 
      where UNO=#{no}
  
    </select>
    
  <select id="getAlarmListFriend" 
      parameterType="hashmap" resultMap="talkieUserMap">
    select T1.UNO2,T1.DATETIME,T1.ALARMNO,T2.UNO,T2.NAME,T2.UNO,T2.PHOPATH
    from SE_ALARM T1 left outer join SE_USERS T2
    on T1.UNO2 =T2.UNO
    where T1.UNO2=#{frNo} and T1.ALARMNO=#{alarmNo}
  </select>

  
</mapper>




























